1.2.7
需要熟悉 scikit-learn, XGBoost 和 Keras

1.3.5
Theano(Stop developing), TensorFlow 符号式张量运算框架，支持自动求微分
Keras 用户友好型


2.神经网络的数学基础

张量(tensor)，张量运算(tensor operation)，微分(differentiation)，梯度下降(gradient descent)
张量是矩阵向任意维度的推广，矩阵是2阶张量

2.1
机器学习中，分类问题中的某个类别叫做类(class)，数据点叫做样本(sample)，与某个样本对应的类叫做标签(label)

神经网络的核心组件是层(layer)。相当于 data filter。层从输入数据中提取表示——我们期望这种表示有助于解决手头问题。大多数深度学习工作涉及将简单层链接起来，从而实现渐进式的数据蒸馏(data distillation)。

训练模型前，需要指定编译(compilation)步骤的3个参数
1.优化器(optimizer)：模型基于训练数据来自我更新的机制，其目的是提高模型性能。
2.损失函数(loss function)：模型如何衡量在训练数据上的性能，从而引导自己朝着正确的方向前进。
3.在训练和测试过程中需要监控的指标(metric)

2.2.1 标量（0阶张量）
	x = np.array(12)
2.2.2 向量（1阶张量）
	x = np.array([1,2,3])
2.2.3  矩阵（2阶张量）
	x = np.array([[1,4],[3,5],[23,6]])
2.2.4  3阶张量与更高阶
	x = np.array([[[5,78,2],[6,79,3],[7,80,4]],[[32,4,13],[31,3,12],[30,2,11]]])
	将多个3阶张量以此类推打包成一个数组就可以创建一个4阶张量。
深度学习处理的一般是0到4阶的张量，但处理视频数据时可能遇到5阶张量。

2.2.5 张量由以下三个关键属性定义
1.轴的个数（阶数）。即 x.ndim
2.形状。这是一个整数元组，表示张量沿每个轴的维度大小（即张量在每个方向上有多长），前面的示例形状分别为
()：标量；(3)：向量；(2,3,3)：3阶张量，由最高维（最大的括号）开始排
3.数据类型（dtype in Python）。这是张量中所包含数据的类型。举例说，张量的类型可以是 float16, float32, float64, uint8 等。在 Tensorflow 中可能还会有 String 类型的张量。
